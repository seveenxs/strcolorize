export interface Pair {
    open: string;
    close: string;
}
export interface AnsiPairs {
    reset: Pair;
    bold: Pair;
    dim: Pair;
    italic: Pair;
    underline: Pair;
    overline: Pair;
    inverse: Pair;
    hidden: Pair;
    strikethrough: Pair;
    black: Pair;
    red: Pair;
    green: Pair;
    yellow: Pair;
    blue: Pair;
    magenta: Pair;
    cyan: Pair;
    white: Pair;
    blackBright: Pair;
    redBright: Pair;
    greenBright: Pair;
    yellowBright: Pair;
    blueBright: Pair;
    magentaBright: Pair;
    cyanBright: Pair;
    whiteBright: Pair;
    bgBlack: Pair;
    bgRed: Pair;
    bgGreen: Pair;
    bgYellow: Pair;
    bgBlue: Pair;
    bgMagenta: Pair;
    bgCyan: Pair;
    bgWhite: Pair;
    bgBlackBright: Pair;
    bgRedBright: Pair;
    bgGreenBright: Pair;
    bgYellowBright: Pair;
    bgBlueBright: Pair;
    bgMagentaBright: Pair;
    bgCyanBright: Pair;
    bgWhiteBright: Pair;
}
export declare const ansi: {
    reset: number[];
    bold: number[];
    dim: number[];
    italic: number[];
    underline: number[];
    overline: number[];
    inverse: number[];
    hidden: number[];
    strikethrough: number[];
    black: number[];
    red: number[];
    green: number[];
    yellow: number[];
    blue: number[];
    magenta: number[];
    cyan: number[];
    white: number[];
    blackBright: number[];
    redBright: number[];
    greenBright: number[];
    yellowBright: number[];
    blueBright: number[];
    magentaBright: number[];
    cyanBright: number[];
    whiteBright: number[];
    bgBlack: number[];
    bgRed: number[];
    bgGreen: number[];
    bgYellow: number[];
    bgBlue: number[];
    bgMagenta: number[];
    bgCyan: number[];
    bgWhite: number[];
    bgBlackBright: number[];
    bgRedBright: number[];
    bgGreenBright: number[];
    bgYellowBright: number[];
    bgBlueBright: number[];
    bgMagentaBright: number[];
    bgCyanBright: number[];
    bgWhiteBright: number[];
};
